"""Initial Setup

Revision ID: 0d4034e40544
Revises: 
Create Date: 2025-06-15 15:39:15.501927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0d4034e40544'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('podcastauthorpersona',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('background', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('profile_image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('friendlyness', sa.Float(), nullable=False),
    sa.Column('trustworthiness', sa.Float(), nullable=False),
    sa.Column('expertise', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userprofile',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('podcast',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('cover', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('profile_id', sa.Uuid(), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('dislike_count', sa.Integer(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('trending_score', sa.Float(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['userprofile.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('podcastauthordynamics',
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('other_author_id', sa.Uuid(), nullable=False),
    sa.Column('trust', sa.Float(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('hates', sa.Integer(), nullable=False),
    sa.Column('relationship', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('background', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['podcastauthorpersona.id'], ),
    sa.ForeignKeyConstraint(['other_author_id'], ['podcastauthorpersona.id'], ),
    sa.PrimaryKeyConstraint('author_id', 'other_author_id')
    )
    op.create_table('podcastauthorpodcast',
    sa.Column('podcast_id', sa.Uuid(), nullable=False),
    sa.Column('author_id', sa.Uuid(), nullable=False),
    sa.Column('is_host', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['podcastauthorpersona.id'], ),
    sa.ForeignKeyConstraint(['podcast_id'], ['podcast.id'], ),
    sa.PrimaryKeyConstraint('podcast_id', 'author_id')
    )
    op.create_table('podcastepisode',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cover', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('audio_file', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('podcast_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['podcast_id'], ['podcast.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conversation',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_time', sa.Integer(), nullable=True),
    sa.Column('end_time', sa.Integer(), nullable=True),
    sa.Column('speaker_id', sa.Uuid(), nullable=False),
    sa.Column('episode_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['episode_id'], ['podcastepisode.id'], ),
    sa.ForeignKeyConstraint(['speaker_id'], ['podcastauthorpersona.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('conversation')
    op.drop_table('podcastepisode')
    op.drop_table('podcastauthorpodcast')
    op.drop_table('podcastauthordynamics')
    op.drop_table('podcast')
    op.drop_table('userprofile')
    op.drop_table('podcastauthorpersona')
    # ### end Alembic commands ###
